generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  firstName     String
  lastName      String
  middleName    String?
  phone         String    @unique
  pin           String
  password      String
  role          Role      @default(AGITATOR)
  coordinatorId Int?
  coordinator   User?     @relation("CoordinatorAgitators", fields: [coordinatorId], references: [id])
  agitators     User[]    @relation("CoordinatorAgitators")
  uiks          UserUIK[]
  voters        Voter[]
  stats         Stats[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  ADMIN
  COORDINATOR
  AGITATOR
}

model UIK {
  code   Int       @id
  name   String
  users  UserUIK[]
  voters Voter[]
  stats  Stats[]
}

model UserUIK {
  id      Int  @id @default(autoincrement())
  userId  Int
  uikCode Int
  user    User @relation(fields: [userId], references: [id])
  uik     UIK  @relation(fields: [uikCode], references: [code])

  @@unique([userId, uikCode])
}

model Voter {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  middleName String?
  phone      String?
  address    String?
  pin        String?
  createdAt  DateTime @default(now())
  addedById  Int
  addedBy    User     @relation(fields: [addedById], references: [id])
  uikCode    Int
  uik        UIK      @relation(fields: [uikCode], references: [code])
}

model Stats {
  id          Int      @id @default(autoincrement())
  date        DateTime
  userId      Int
  uikCode     Int
  votersAdded Int      @default(0)
  user        User     @relation(fields: [userId], references: [id])
  uik         UIK      @relation(fields: [uikCode], references: [code])

  @@unique([userId, uikCode, date])
}
